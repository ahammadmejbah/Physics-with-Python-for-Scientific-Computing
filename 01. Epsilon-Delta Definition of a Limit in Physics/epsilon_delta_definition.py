# -*- coding: utf-8 -*-
"""Epsilon-Delta Definition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uj1PcemHfJyt7NWtiR9ppeRmvn5MQF4H
"""

import math
import numpy as np
import matplotlib.pyplot as plt

def f(x):
    return math.sin(x)/x if x!=0 else 1.0

a = 0.0 #
L = 1.0
epsilon = 1e-4

def condition_function(delta, data_samples = 10000):
    x_axis_data = np.linspace(a-delta, a+delta, data_samples)
    x_axis_limit = x_axis_data[np.abs(x_axis_data - a)>1e-15]
    x_axis_data_values = np.array([f(float(x)) for x in x_axis_data])
    return np.all(np.abs(x_axis_data_values - L) < epsilon)

delta  = 0.1

for _  in range(100):
    if condition_function(delta):
        break
    delta *=0.5 # delta = delta * 0.5

x_axis_window = max(0.25, 10.0*delta)
x_axis_new_data = np.linspace(a - x_axis_window, a+x_axis_window, 3000)
y_axis_new_data = np.array([f(float(x)) for x in x_axis_new_data])

#plt.figure(figsize = (10, 8))
plt.figure()
plt.plot(x_axis_new_data, y_axis_new_data, label = "f(x) = sin(x)/x")
plt.axhline(L+epsilon, linestyle="--", label ="L+epsilon")
plt.axhline(L-epsilon, linestyle="--", label ="L-epsilon")
plt.axvline(a-delta, linestyle=":", label ="a-delta")
plt.axvline(a+delta, linestyle=":", label ="a-delta")
plt.title(f"Epsilon-Delta Definition: Visual Representation\n epsilon-delta at a= {a}, L= {L} (epsilon={epsilon}, delta = {delta})")
plt.xlabel("x")
plt.ylabel("f(x)")
plt.legend(loc="best")
plt.grid(True, alpha =0.3)
plt.savefig("/content/Epsilon_Delta_Definition.png", dpi= 160, bbox_inches = "tight")
plt.show()

